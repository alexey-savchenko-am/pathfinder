export function generateMaze(r,t){const o=Array.from({length:r},(()=>Array(t).fill(1)));o[1][1]=0,recursiveBacktracker(o,1,1);for(let e=0;e<r;e++)for(let r=0;r<1;r++){const r=Math.floor(Math.random()*t);1===o[e][r]&&0===o[e][r-1]&&0===o[e][r+1]&&(o[e][r]=0)}for(let e=0;e<t;e++)for(let t=0;t<10;t++){const t=Math.floor(Math.random()*r);t>0&&t<r-1&&1===o[t][e]&&0===o[t-1][e]&&0===o[t+1][e]&&(o[t][e]=0)}return o.flat()}function recursiveBacktracker(r,t,o){const e=[[0,2],[2,0],[0,-2],[-2,0]];shuffleArray(e);for(const[a,n]of e){const e=t+a,f=o+n;e>=0&&e<r.length&&f>=0&&f<r[0].length&&1===r[e][f]&&(r[e][f]=0,r[t+a/2][o+n/2]=0,recursiveBacktracker(r,e,f))}}function shuffleArray(r){for(let t=r.length-1;t>0;t--){const o=Math.floor(Math.random()*(t+1));[r[t],r[o]]=[r[o],r[t]]}}