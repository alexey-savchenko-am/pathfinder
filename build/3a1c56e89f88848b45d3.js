import{Vector2D}from"../Vector2D.js";export function astar(o,t,e,r,s){function c(o,t){this._parent=null,this._row=o,this._col=t,this._cost=0,this._heuristic=0,this.getCommonCost=()=>this._cost+this._heuristic}const n=[],_=[],l=new c(o.getRow,o.getCol);for(n.push(l);n.length>0;){let o=n[0],e=0;for(let t=1;t<n.length;t++)n[t].getCommonCost()<o.getCommonCost()&&(o=n[t],e=t);n.splice(e,1),_.push(o);const r=f(o);if(o._row===t.getRow&&o._col===t.getCol)return h(o);for(let e of r)_.some((o=>o._row===e._row&&o._col===e._col))||(n.some((o=>o._row===e._row&&o._col===e._col))||n.push(e),e._cost=o._cost+1,e._heuristic=(i=e,Math.abs(i._row-t.getRow)+Math.abs(i._col-t.getCol)),e._parent=o)}var i;function h(o){let t=[],e=o;for(;e;)t.push(new Vector2D(e._row,e._col)),e=e._parent;return t=t.reverse(),t}function f(o){const t=[],n=[[-1,0],[1,0],[0,1],[0,-1]];for(let _ of n){const n=Math.floor(o._row+_[0]),l=Math.floor(o._col+_[1]);if(n>=0&&l>=0&&n<s&&l<r){e.getTile(new Vector2D(n,l)).terrain.getIsPassable()&&t.push(new c(n,l))}}return t}}